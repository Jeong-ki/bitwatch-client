name: Deploy Next.js App

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 트리거

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
      NEXT_PUBLIC_URL: ${{ vars.NEXT_PUBLIC_URL }}
      NEXT_PUBLIC_UPBIT_API_URL: ${{ vars.NEXT_PUBLIC_UPBIT_API_URL }}

    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Docker 이미지 빌드
      - name: Build Docker image
        run: |
          echo "Building Docker image with the following variables:"
          echo "NEXT_PUBLIC_API_URL: $NEXT_PUBLIC_API_URL"
          echo "NEXT_PUBLIC_URL: $NEXT_PUBLIC_URL"
          echo "NEXT_PUBLIC_UPBIT_API_URL: $NEXT_PUBLIC_UPBIT_API_URL"
          docker build --no-cache \
            --build-arg NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL \
            --build-arg NEXT_PUBLIC_URL=$NEXT_PUBLIC_URL \
            --build-arg NEXT_PUBLIC_UPBIT_API_URL=$NEXT_PUBLIC_UPBIT_API_URL \
            -t bitwatch-client .

      # 3. Docker Hub에 푸시 (선택 사항)
      #- name: Log in to Docker Hub
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}

      #- name: Push Docker image
      #  run: docker push your-dockerhub-username/bitwatch-client:latest

      # 4. EC2 인스턴스로 SSH를 통해 배포 (ex: docker-compose를 재시작)
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/project/bitwatch-client
            docker-compose down
            docker-compose pull || true
            docker-compose up -d --build